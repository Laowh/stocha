% Version de la Q2.6 avec le critère de convergence (et donc le code trouvé avec l'autre version)
% voir Q2_6_it pour une version avec nombre fixe d'itérations 

% Retrouve le texte original dans la plupart des cas (ou proche).
% Avec ce nombre d'itérations l'execution peut prendre une dizaine de
% secondes
% Parfois le programme se trompe assez fortement et reste bloqué avec un
% mauvais code donc dans ce cas il est préférable de le relancer (le
% programme s'arrete s

seq2;
vraisemb = -Inf;

%code aléatoire
permutation = alphabet(randperm(40));
sim = [0];
%nombre d'itérations
it = 0;

true_permutation = 'jby."]ri,anfoc-'':qsud!h?lpwtve;[zxm)g( k';
prev_it = 0;
%Données pour le graph
Tab_vraisemblance_alt = [vraisemb];
permutation = alphabet(randperm(40));
nb_unique = length(unique(seq));

%Fait des permutations aléatoires dans le code et si meilleure vraisemblance on garde
while(sim(end) < 0.90* nb_unique)
   permutation_next = exchange (permutation, randi(40), randi(40)) ;
   %translation_next = transmute (seq, permutation_next, alphabet);
   vraisemb_next = vraisemblance_alt(seq,permutation_next,pinit,Q);

   %Si meilleur code
   if(randi(1) < (2^(vraisemb_next - vraisemb)))
     %On garde le nouveau code
     permutation = permutation_next;
     vraisemb = vraisemb_next;
     translation = transmute (seq, permutation_next, alphabet);
     
     %données graphiques
     Tab_vraisemblance_alt = [Tab_vraisemblance_alt vraisemb];
     sim = [sim common(true_permutation, permutation)];
     prev_it = it;
     
     %Permet d'observer la convergence dans la console, peut être retiré
     [sim(end) nb_unique] 
   end 
   it = it+1;
   %empeche de tourner indéfiniment
   if (it > prev_it + 10000)
       disp("no improvement after 10 000 iterations. Try relaunching the program for better seed");
       break;
   end
end
figure(1);
plot(Tab_vraisemblance_alt);
title('Vraisemblance à chaque permutation effectuée')
ylabel('Vraisemblance');
xlabel('Nombre de permutations');
figure(2);
plot(sim);
title('Substitutions correctes à chaque permutation effectuée')
ylabel('Nombre de substitutions correctes');
xlabel('Nombre de permutations');
permutation
translation
vraisemb
